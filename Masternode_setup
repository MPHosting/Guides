A MUE guide for setting up and hosting a masternode on a Digital Ocean droplet.

The MUE network has switched to a Dash-X11 code base, and as such it inherits the strengths that a 2-tier network brings, in terms of a strong masternode network for additional functions and security of the network.

The masternodes perform tasks for the MUE network. These are for instance InstantSend, PrivateSend, storage of the blockchain and governance capabilities. As a reward for running these functions, the masternodes are paid out a part of the block reward for their services. The block reward is 40 MUE per block and each block occurs on average every 40 seconds, thus growing the supply 1 MUE every second.

The block reward is split in three providing 45% to the miner who solved the block, 45% to the masternode for it’s services and the remaining 10% going to the continuous funding of the MUE project. The masternode reward is 45%*40 MUE = 18 MUE per block.

How to setup a Virtual Private Server (VPS) and run a MUE masternode.

For starters, the reason for running a dedicated VPS instead of hosting one’s masternode on a home internet connection are several. The masternode must be up and running all the time to provide services for the network. Should the connection go down, or the node performs badly, the rest of the network will be unhappy with the services and the masternode loses payments. Many home internet providers are unhappy if the owner runs a server at home and may shut down access to the masternode.

A typical masternode uses around 500 GB or more of traffic per month. Home internet users with traffic caps will have a hard time running a masternode if the bandwidth is limited. It is especially important to have a high speed connection as the masternode is serving up the blockchain. Additional feature to the network will likely require a high speed connection as well.

VPS requirements for a masternode

The minimal requirements for running a masternode are:
1 GB of ram, 1 CPU core, 20 GB of harddrive space and a high speed internet connection and at least a transfer of 500 GB per month. Better hardware can be used to help the masternode performance, but using less than the required minimal hardware can make the masternode unstable and cause the node to crash or perform poorly. By doing so, the node can get kicked off the masternode lists, causing the masternode to lose payments.


Setting up a local wallet for cold storage and a hot wallet (masternode) on a VPS

Let's start by getting thew wallet for your platform.
Please go the website: htps://monetaryunit.org/download/ and select the wallet that matches your computer. For this tutorial wwe will be using a 64-bit Windows machine for the cold storage wallet and a Linux VPS for the hot masternode daemon.

Install wallet on local machine
Download the Windows client, monetaryunit-1.0.10.8-win64-setup.exe. You may check the files with the provided checksums, verify that the files downloaded correctly, and if they are different, please redownload the client again.

Install the client, and then start it.
You may be promted by the Windows Firewall to allow the wallet to accept connections on privat an dopen networks. Please select both network boxes and accept. Now, with the client open, let it sync to the network wait for the blockchain to be downloaded. The wallet will attempt to synchronize with the network, no manual actions should be needed at this point.

Protect your funds with a strong password.
In your wallet, go to "Settings" and then "Encrypt Wallet"
Provide a strong password to secure your funds. Please make sure to remeber this password or write it down and keep it in a bank safe deposit. If you lose your wallet password, there is no means of recovering your funds!
After providing a strong password, the wallet needs to be restarted to lock and ecrypt your funds. Please restart your wallet for this step to complete.

With the wallet back up and running, it's time to get it ready for the masternode address.
Open the console by clicking the "Tools" menu and selcting "Debug console"
The next command providews us with a private key for the masternode collateral. Please type
masternode genkey
and hit enter. The output will look something like this:

Next, we need to make a transaction of exactly 500 000 MUE to an address. This is very important, the transaction must be exaclty 500 000 MUE for the collateral, no more and no less.
Go to the "Recieve" tab of your wallet and in the Label field write "Masternode Collateral" and keep the two checkboxes "Reuse an existiing recieving address" and "Request InstantSend" unchecked. Click the orange button "Request payment" to get a new address:

This is the addtress we will be sendig our collateral to.

Next, make a transaction of exactly 500 000 MUE to the adddress you just generated. If you are sending from you own wallet or from an exchange, make sure that any transaction fees are not taken from the sending amount. It is crucial that the collateral transaction is exactly 500 000 MUE and made in one (1) single transaction.

Go to the "Send" tab of your wallet and paste in the MUE address to recieve the collateral funds.
Uncheck the box with "Subtract fee from amount" and ensure that the sending amount is exactly 500 000 MUE.

Please tripple check that the address is correct, and that the sending amount is 500 000 MUE. If you by mistake send your funds to the wrong address, THEY WILL BE GONE!

After checking everything, send your funds to the address above and wait for the transaction to confirm. Press "send" and write your wallet password to make the transaction.
Check the "Transactions" tab, and there should be a transaction listed as "Payment to yourself" if you sent the funds from the wallet. Otherwise sending from an exchange will list that transaction address instead.

While waiting, let's start working on the VPS (Virtual Private Server) hot node.
This guide will use Digital Ocean as a VPS provider, but the reader is free to chose whomever they like. The auther has used them for years as a masternode host and they are very reliable. There are definatly cheaper providers, but something to consider is that the masternode needs to be up and running 24/7 for supporting the network. Running a masternode on a cheaper, less reliable host will likely give more downtime and less payments in the longer run.

This promotion&referral code https://m.do.co/c/0c50700df3bf gives every new user a $10 value to start using a new VPS. Please freel free to use it if you like.
Sign up for a new account, log in and click "New Droplet"
For this guide we are looking to start a 16.04 Ubuntu version of Linux as the host:
Select the 1 GB / 1 CPU, 30 GB SSD Disk, 2 TB Transfer version. The $10 USD credit provided via the promotional code will give most of the first month hosting for free! Chose a location, it doesn't really matter, but it might be better to chose a location closer to yourself for the remote management.

Create the droplet, and the root login, ip and password will be sent to your email address. These details are needed to access your VPS instance.

To access a Linux VPS, you need a program called Putty, http://www.putty.org/ it is a client to securely connect remotly to the VPS host.

Install the client and open putty.exe, if needed allow it through the Windows firewall and access your new droplet.
Provide the ip-number, keep the port on 22, and save the configuration with a suitable name. This allows for easier access next time you want to log on your droplet.
Click connect and a block window will open up, promting you for your login and password. "root" is the login and the password is in your email from Digital Ocean.

Login to VPS wget wallet unpack
check the executables and configuration files:

cd .muecore
chmod 755 ./mued
chmod 755 ./mue-cli
nano -w mue.conf
<code>
#----
rpcuser=XXXXXXXXXXXXX
rpcpassword=XXXXXXXXXXXXXXXXXXXXXXXXXXXX
rpcallowip=127.0.0.1
#----
listen=1
server=1
daemon=1
maxconnections=24
#--------------------
masternode=1
masternodeprivkey=XXXXXXXXXXXXXXXXXXXXXXX
externalip=XXX.XXX.XXX.XXX
</code>

In the window, replace all XXXes with your personalized information. rpcuser and rpcpassword can be anything (password longer than username), masternode privkey, and your VPS IP address.

Save and exit the edited file by pressing ctrl w followed by ctrl x.

Start the mue daemon:
./mued


Let the blockchain sync on your remote VPS while you move on to installing Sentinel. (Guide for this based on @moocowmoo's version)

Install sentinel agent on masternode

step 1) install prerequisites

sudo apt-get update
sudo apt-get install -y git python-virtualenv

step 2) If you are not already there, navigate to your .dashcore folder

cd .muecore

step 2) clone sentinel, cd to sentinel directory

git clone https://github.com/dashpay/sentinel.git
cd sentinel

step 3) create virtual python environment

virtualenv venv

(if this command fails try installing this package

sudo apt-get install -y virtualenv

step 4) install sentinel dependencies

venv/bin/pip install -r requirements.txt

step 5) test sentinel is alive and talking to the still sync'ing wallet

venv/bin/python bin/sentinel.py

You should see: "mued not synced with network! Awaiting full sync before running Sentinel."
This is exactly what we want to see at this stage

step 6) wait until the reindex has complete and the wallet has synced

cd .. (you should now be back in .muecore)
./mue-cli mnsync status

This is what you're waiting to see:

AssetId 999, all trues, one false, and a FINISHED. Keep issuing 
./mue-cli mnsync status until it looks like this:

{
"AssetID": 999,
"AssetName": "MASTERNODE_SYNC_FINISHED",
"Attempt": 0,
"IsBlockchainSynced": true,
"IsMasternodeListSynced": true,
"IsWinnersListSynced": true,
"IsSynced": true,
"IsFailed": false
}

step 7) start your masternode

At this point, your remote masternode is synchronized and chatting with the network
but is not accepted as a masternode because it hasn't been introduced to the network
by your collateral. 

Go back to your local wallet, open the debug console, and run these commands:

walletpassphrase <YOURPASSPHRASE> 120
masternode start-alias <MNALIAS>

to start your masternode.


step 8) test sentinel has nothing to say

You're needed back in Sentinel directory! 

cd sentinel

At this point, running

venv/bin/python bin/sentinel.py

should return nothing but silence. This is how you know it's working.

step 9) create a crontab entry to wake sentinel every five minutes

crontab -e

Choose nano as your editor. Add this line to the end of the file.

* * * * * cd /home/YOURUSERNAME/.muecore/sentinel && ./venv/bin/python bin/sentinel.py 2>&1 >> sentinel-cron.log


Make sure you:
1) Change USERNAME to your username.
2) Hit enter to create another line at the end after this line, or the file will not work.

Press ctrl w to save and ctrl x exit.

step 10) check for start, try, try, again

cd /home/USERNAME/.muecore

./mue-cli masternode debug

Look for a success message. If you see one, you are done!

Because the network is in transition, you may have to re-send your masternode start.

to do it a second time, repeat step 7.

step 11) partytime!

Congratulations, your masternode is running!
